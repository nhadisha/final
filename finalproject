import networkx as nx
import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
from sklearn.ensemble import RandomForestClassifier

data = pd.read_csv('social_network_data.csv')

G = nx.from_pandas_edgelist(data, 'source', 'target', ['attribute1', 'attribute2'])


def extract_features(node):
    features = {
        'degree': G.degree(node),
        'betweenness': nx.betweenness_centrality(G, node),
        # Add other features
    }
    return features

features_df = pd.DataFrame([extract_features(node) for node in G.nodes])

labels = data['label']  # Replace 'label' with the actual column name
X_train, X_test, y_train, y_test = train_test_split(features_df, labels, test_size=0.2)

model = RandomForestClassifier()
model.fit(X_train, y_train)

predictions = model.predict(X_test)

accuracy = accuracy_score(y_test, predictions)
print(f"Model Accuracy: {accuracy}")

